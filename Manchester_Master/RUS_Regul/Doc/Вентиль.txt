1.мар.2024 10:01
14.мар.2024 16:24
Сергеев И.С.

Регулятор давления, 3 шт. на РУС.
Контроллер электропривода регулятора
Алгоритм работы

База:
- датчик давления:
  - оцифровка (внешний АЦП на SPI, 10/80 SPS)
  - фильтрация (скользящее среднее?)
  - нормирование (приведение ADC->MPa через калибровочные коэффициенты)
  - термокомпенсация?
  - автоподстройка нуля (по внешней команде, когда снят поток?)
- управление двигателем:
  - управление питанием (снимать питание при батарейном питании РУС и необходимости измерения давления)
  - через ШИМ и Реверс управлять скоростью и направлением вращения
  - через захват ШИМ контролировать текущее положение и скорость
    - дискретность порядка 10 Гц для начала, может больше если не будет хватать
    - возможно понадобится усреднять скорость для сглаживания
  - измерение напряжения питания и потребляемого тока, через АЦП
- интерфейс SKLP
  - выбор адреса через внешние пины
  - список команд

Алгоритмы:
- По команде синхронизировать датчик положения с заданным углом. Далее пересчитывать
положение в угол. Возвращать точку синхронизации по команде, чтобы можно было
восстановить при подаче питания.
- Установить требуемый угол:
  - вращать в заданном направлении до достижения угла;
  - управлять скоростью по мере приближения к заданному углу (ПИД?)
- Автосинхронизация положения мотора:
  - сделать несколько оборотов, записывая давление
  - кореллировать записанный сигнал с синусом, чтобы синхронизировать положение с углом
- Стабилизация давления:
  - устанавливать заслонку в положение, обеспечивающее требуемое давление,
  и корректировать положение заслонки

Команды управления:
- вернуть данные
- вернуть калибровки
- записать калибровки
- вкл/откл питание мотора
- задать скорость и направление вращения мотора
- измерить смещение нуля датчика давления
- задать синхронизацию положения мотора и вентиля
- выполнить алгоритм автосинхронизации положения мотора и вентиля
- задать положение вентиля
  - угол
  - процент перекрытия

Возвращаемые данные:
- флаги
  - работоспособность ДД
  - работоспособность мотора
  - задан/измерен ноль датчика давления
  - задана/измерена синхронизация вентиля и мотора
- режим работы
  - останов двигателя, (давление измеряется)
  - управление скоростью мотора
  - установка положения вентиля
    - в процессе
    - готово
  - автосинхронизация мотора и вентиля
  - стабилизация давления??
- температура µC
- напряжение питания платы и мотора
- ток двигателя (усреднение?)
- скорость вращения (rpm?)
  - заданная (по внешней команде или внутреннему алгоритму)
  - измеренная
- положение вентиля
  - счетчик с датчика мотора (pulses)
  - расчетный угол вала/вентиля (0..360° или 0..2pi rad)
  - рассчетное перекрытие вентиля (0..100%)
- давление
  - полученный код АЦП
  - перевод в МПа (калибровка, термокомпенсация, смещение нуля)

Калибровочные данные:
- из NMV
  - калибровка датчика давления (полином, термокомпенсация)
  - импульсов на оборот вала редуктора
  - коэффициенты ПИД (по мере поступления)
  - порог ток отключения мотора?
- из RAM
  - синхронизация мотора и вентиля
  - ноль датчика давления


Алгоритм автоопределения положения заслонки
*******************************************
1. Выполнить несколько оборотов заслонки, контролируя положение вала двигателя.
Скорость оборотов видимо максимальная. Сохранять в буфер измеренное положение
двигателя и измеренное давление давление. Дискрета времени порядка 100 мс -
синхронизировать с датчиком давления 10/80 Гц? Ожидаемая максимальная скорость
оборотов вентиля - 20 об/мин, т.е. за 100 мс будет 0.0333 об = 12°, а нужна
точность порядка единиц градусов. Т.е. или вращать медленнее, или измерять быстрее.
Вероятно, 80 sps должно хватить. Для первоначальной отработки алгоритма на компе
ожидается опрос порядка 10 Гц, можно вращать помедленнее.
  В результате получен буфер: за 3 оборота, 10 с, 800 точек положение/давление.
Для экономии памяти складывать прямые измерения в UI16 - 3200 Б через равные
промежутки времени.
2. Привязка полученных данных: можно ловить мин-макс, контролировать расстояние
между ними. Можно использовать автокорреляцию?
2.1 Краткий результат моделирования на питоне:
- вращать несколько оборотов, контролируя давление
- получить массив из соответствий {положение вала}/{давление}
- пересчитать положения вала в синус
- выполнить корреляцию массива давлений и массива синуса (по алгоритму, возвращающему одно число)
- сместить массив синуса на одну точку, повторить рассчет корреляции
- повторять расчет корреляции, пока синус не будет смещен на один период. в результате получить функцию
коррелляции давления с положением вала.
- найти максимум функции по фазе - максимальная корреляция соотвествует максимальному открытию/закрытию вентиля.
Вопросы по алгоритму:
- нужно ли дополнительно обрабатывать давление, например смещать к нулю, фильтровать по частоте?
- какой критерий достоверности корреляции? просто брать максимум видимо не вариант
- на питоне использована функция np.correlate( %aSine%, %aPress%, mode = 'valid' ), которая выдает одно число.
какой эквивалент в библиотеке CMSIS DSP?
- сколько нужно процессорного времени L433, чтобы произвести подобный расчет?
2.2 Упрощение алгоритма при условии обеспечения равномерного вращения:
- вращать несколько оборотов, снимая данные;
- получить массив соответствий давление/положение за строго целое число оборотов
на участке равномерного вращения;
- выполнить преобразование FFT по давлению;
- получить фазу синуса (например, при трех оборотах это будет третий, начиная с нуля?)
- по фазе и начальному положению определить привязку